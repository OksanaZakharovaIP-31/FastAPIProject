"""'initial'

Revision ID: caf269a259ee
Revises: 
Create Date: 2023-10-11 10:49:32.448592

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'caf269a259ee'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_('quiz',)_id", table_name="('quiz',)")
    op.drop_table("('quiz',)")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("('quiz',)",
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"(\'\'quiz\'\',)_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('id_question', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_data', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name="('quiz',)_pkey"),
    sa.UniqueConstraint('id_question', name="('quiz',)_id_question_key")
    )
    op.create_index("ix_('quiz',)_id", "('quiz',)", ['id'], unique=False)
    # ### end Alembic commands ###
